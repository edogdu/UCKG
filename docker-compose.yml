version: '3'
volumes:
  neo4j_vol:
    driver: local
  my_volume:
    driver: local
services:
  neo4j:
    image: neo4j:4.4.0
    # healthcheck:
    #   test: ["CMD", "nc", "-z", "localhost", "7687"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    environment:
      NEO4J_AUTH: neo4j/abcd90909090
      NEO4J_apoc_trigger_enabled: "true"
      NEO4JLABS_PLUGINS: '["apoc", "n10s"]' # Include n10s (Neosemantics) plugin
      NEO4J_ACCEPT_LICENSE_AGREEMENT: 'yes' # Required if using Enterprise version
      NEO4J_dbms_security_procedures_unrestricted: "apoc.*"
      NEO4J_apoc_initializers_neo4jConf: "true"
      NEO4J_apoc_import_file_enabled: "true"
      NEO4J_apoc_initializer_cypher: "CALL apoc.cypher.runFiles(['file:///init.cypher'])"
      NEO4J_dbms_jvm_additional: "-XX:-UseContainerSupport"
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - $PWD/plugins:/neo4j/plugins # Mount the plugins directory
      - my_volume:/vol/data # Persist data
      - neo4j_vol:/data
      - $PWD/neo4j/import:/var/lib/neo4j/import # Import directory 

  uckg-scripts:
    build: .
    environment:
      NEO4J_URI: bolt://neo4j:abcd90909090@neo4j:7687
      VOL_PATH: /vol/data
      JAVA_OPTS: "-Xmx12000M -Xms12000M"
    deploy:
      resources:
        limits:
          memory: 7G
        reservations:
          memory: 6G
    volumes:
      - my_volume:/vol/data # Persist data 
    depends_on:
      - neo4j
        #cron:
        #build:
        #context: .
        #dockerfile: Dockerfile-cron
        #volumes:
        #- my_volume:/vol/data
